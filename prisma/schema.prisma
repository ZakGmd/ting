generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String      @id @default(cuid())
  email            String      @unique
  password         String?
  name             String
  image            String?
  emailVerified    DateTime?
  displayName      String?
  userType         UserType    @default(FREELANCER)
  bio              String?
  location         String?
  website          String?
  experience       Experience? @default(BEGINNER)
  skills           String?
  category         String?
  profileImage     String?
  coverImage       String?
  profileCompleted Boolean     @default(false)
  registrationStep Int         @default(1)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  accounts         Account[]
  sessions         Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  userType     UserType?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

enum UserType {
  FREELANCER
  CLIENT
}

enum Experience {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
